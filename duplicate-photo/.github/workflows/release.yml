name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-images:
    name: Docker Build & Push (api, worker)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT || github.token }}

      - name: Extract tag/version
        id: ver
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "owner_lc=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "repo_name=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_OUTPUT

      - name: Build API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.ver.outputs.owner_lc }}/${{ steps.ver.outputs.repo_name }}-api:${{ steps.ver.outputs.tag }}
            ghcr.io/${{ steps.ver.outputs.owner_lc }}/${{ steps.ver.outputs.repo_name }}-api:${{ steps.ver.outputs.short_sha }}
          target: api

      - name: Build Worker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.ver.outputs.owner_lc }}/${{ steps.ver.outputs.repo_name }}-worker:${{ steps.ver.outputs.tag }}
            ghcr.io/${{ steps.ver.outputs.owner_lc }}/${{ steps.ver.outputs.repo_name }}-worker:${{ steps.ver.outputs.short_sha }}
          target: worker

  deploy-render:
    name: Deploy to Render (optional)
    runs-on: ubuntu-latest
    needs: build-images
    if: ${{ secrets.RENDER_API_KEY && secrets.RENDER_SERVICE_ID_API }}
    steps:
      - name: Kick API deploy
        run: |
          curl -s -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_API }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{}'
      - name: Kick Worker deploy (if configured)
        if: ${{ secrets.RENDER_SERVICE_ID_WORKER }}
        run: |
          curl -s -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_WORKER }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{}'

  release-notes:
    name: Draft GitHub Release
    runs-on: ubuntu-latest
    needs: build-images
    steps:
      - uses: actions/checkout@v4
      - name: Generate changelog
        run: |
          echo "### Changes" > CHANGES.md
          git log -1 --pretty=format:'- %s' >> CHANGES.md
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGES.md
          generate_release_notes: true